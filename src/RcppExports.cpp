// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// IFS
NumericMatrix IFS(const List& transformation, const List& translation, const std::vector<int>& probability, const int& iterations, int x_res, int y_res);
RcppExport SEXP _IFSPlot_IFS(SEXP transformationSEXP, SEXP translationSEXP, SEXP probabilitySEXP, SEXP iterationsSEXP, SEXP x_resSEXP, SEXP y_resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type transformation(transformationSEXP);
    Rcpp::traits::input_parameter< const List& >::type translation(translationSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type probability(probabilitySEXP);
    Rcpp::traits::input_parameter< const int& >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type x_res(x_resSEXP);
    Rcpp::traits::input_parameter< int >::type y_res(y_resSEXP);
    rcpp_result_gen = Rcpp::wrap(IFS(transformation, translation, probability, iterations, x_res, y_res));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_IFSPlot_IFS", (DL_FUNC) &_IFSPlot_IFS, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_IFSPlot(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
