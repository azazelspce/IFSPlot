barplot(longitud_data_final, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 20))
barplot(hojas_data_final, ylab = "Cantidad de hojas", xlab="Tratamiento", ylim = c(0, 7))
barplot(longitud_data_final, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 16))
barplot(longitud_data_final, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 20))
barplot(longitud_data_final, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 16))
longitud_data_final
barplot(hojas_data_final, ylab = "Cantidad de hojas", xlab="Tratamiento", ylim = c(0, 7))
##ANOVA DE UNA VIA
data = read.csv("E:/Downloads/basededatos.csv", dec = ".", sep = ";", header=TRUE)
data = data[data$Individuo != 2, ]
data_nuevo = data[data$Semana == 1, c("Tratamiento", "Individuo")]
data_nuevo$long_sem_1 = data[data$Semana == 1, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_2 = data[data$Semana == 2, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_3 = data[data$Semana == 3, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_4 = data[data$Semana == 4, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$hojas_sem_1 = data[data$Semana == 1, c("N..de.hojas")]
data_nuevo$hojas_sem_2 = data[data$Semana == 2, c("N..de.hojas")]
data_nuevo$hojas_sem_3 = data[data$Semana == 3, c("N..de.hojas")]
data_nuevo$hojas_sem_4 = data[data$Semana == 4, c("N..de.hojas")]
data_nuevo$long_delta = data_nuevo$long_sem_4 - data_nuevo$long_sem_1
data_nuevo$hojas_delta = data_nuevo$hojas_sem_4 - data_nuevo$hojas_sem_1
anova_longitud = aov(data_nuevo$long_delta~data_nuevo$Tratamiento, data=data_nuevo)
anova_longitud
anova_hojas = aov(data_nuevo$hojas_delta~data_nuevo$Tratamiento, data=data_nuevo)
anova_hojas
summary(anova_longitud)
summary(anova_hojas)
shapiro.test(anova_longitud$residuals)
shapiro.test(anova_hojas$residuals)
longitud_data = c()
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Deficit"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Deficit"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Inicial"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Inicial"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data = array(longitud_data, c(2, 3))
colnames(longitud_data) = c("Deficit", "Inicial", "Saturacion")
hojas_data = c()
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Deficit"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Deficit"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Inicial"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Inicial"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data = array(hojas_data, c(2, 3))
colnames(hojas_data) = c("Deficit", "Inicial", "Saturacion")
longitud_data_final = c()
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Deficit"]))
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Inicial"]))
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data_final = array(longitud_data_final, dimnames = list(c("Deficit", "Inicial", "Saturacion")))
hojas_data_final = c()
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Deficit"]))
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Inicial"]))
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data_final = array(hojas_data_final, dimnames = list(c("Deficit", "Inicial", "Saturacion")))
barplot(longitud_data_final, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 20))
barplot(hojas_data_final, ylab = "Cantidad de hojas", xlab="Tratamiento", ylim = c(0, 7))
barplot(longitud_data, beside=TRUE, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 20))
barplot(hojas_data, beside=TRUE, ylab = "Cantidad de hojas", xlab="Tratamiento", ylim = c(0, 7))
boxplot(long_delta~Tratamiento, data=data_nuevo)
boxplot(hojas_delta~Tratamiento, data=data_nuevo)
##ANOVA DE UNA VIA
data = read.csv("E:/Downloads/basededatos.csv", dec = ".", sep = ";", header=TRUE)
data = data[data$Individuo != 2, ]
data_nuevo = data[data$Semana == 1, c("Tratamiento", "Individuo")]
data_nuevo$long_sem_1 = data[data$Semana == 1, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_2 = data[data$Semana == 2, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_3 = data[data$Semana == 3, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_4 = data[data$Semana == 4, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$hojas_sem_1 = data[data$Semana == 1, c("N..de.hojas")]
data_nuevo$hojas_sem_2 = data[data$Semana == 2, c("N..de.hojas")]
data_nuevo$hojas_sem_3 = data[data$Semana == 3, c("N..de.hojas")]
data_nuevo$hojas_sem_4 = data[data$Semana == 4, c("N..de.hojas")]
data_nuevo$long_delta = data_nuevo$long_sem_4 - data_nuevo$long_sem_1
data_nuevo$hojas_delta = data_nuevo$hojas_sem_4 - data_nuevo$hojas_sem_1
anova_longitud = aov(data_nuevo$long_delta~data_nuevo$Tratamiento, data=data_nuevo)
anova_longitud
anova_hojas = aov(data_nuevo$hojas_delta~data_nuevo$Tratamiento, data=data_nuevo)
anova_hojas
summary(anova_longitud)
summary(anova_hojas)
shapiro.test(anova_longitud$residuals)
shapiro.test(anova_hojas$residuals)
longitud_data = c()
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Deficit"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Deficit"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Inicial"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Inicial"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data = array(longitud_data, c(2, 3))
colnames(longitud_data) = c("Deficit", "Inicial", "Saturacion")
hojas_data = c()
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Deficit"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Deficit"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Inicial"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Inicial"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data = array(hojas_data, c(2, 3))
colnames(hojas_data) = c("Deficit", "Inicial", "Saturacion")
longitud_data_final = c()
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Deficit"]))
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Inicial"]))
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data_final = array(longitud_data_final, dimnames = list(c("Deficit", "Inicial", "Saturacion")))
hojas_data_final = c()
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"]))
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"]))
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data_final = array(hojas_data_final, dimnames = list(c("Deficit", "Inicial", "Saturacion")))
barplot(longitud_data_final, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 20))
barplot(hojas_data_final, ylab = "Cantidad de hojas", xlab="Tratamiento", ylim = c(0, 7))
barplot(longitud_data, beside=TRUE, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 20))
barplot(hojas_data, beside=TRUE, ylab = "Cantidad de hojas", xlab="Tratamiento", ylim = c(0, 7))
boxplot(long_delta~Tratamiento, data=data_nuevo)
boxplot(hojas_delta~Tratamiento, data=data_nuevo)
##ANOVA DE UNA VIA
data = read.csv("E:/Downloads/basededatos.csv", dec = ".", sep = ";", header=TRUE)
data = data[data$Individuo != 2, ]
data_nuevo = data[data$Semana == 1, c("Tratamiento", "Individuo")]
data_nuevo$long_sem_1 = data[data$Semana == 1, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_2 = data[data$Semana == 2, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_3 = data[data$Semana == 3, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_4 = data[data$Semana == 4, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$hojas_sem_1 = data[data$Semana == 1, c("N..de.hojas")]
data_nuevo$hojas_sem_2 = data[data$Semana == 2, c("N..de.hojas")]
data_nuevo$hojas_sem_3 = data[data$Semana == 3, c("N..de.hojas")]
data_nuevo$hojas_sem_4 = data[data$Semana == 4, c("N..de.hojas")]
data_nuevo$long_delta = data_nuevo$long_sem_4 - data_nuevo$long_sem_1
data_nuevo$hojas_delta = data_nuevo$hojas_sem_4 - data_nuevo$hojas_sem_1
anova_longitud = aov(data_nuevo$long_delta~data_nuevo$Tratamiento, data=data_nuevo)
anova_longitud
anova_hojas = aov(data_nuevo$hojas_delta~data_nuevo$Tratamiento, data=data_nuevo)
anova_hojas
summary(anova_longitud)
summary(anova_hojas)
shapiro.test(anova_longitud$residuals)
shapiro.test(anova_hojas$residuals)
longitud_data = c()
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Deficit"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Deficit"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Inicial"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Inicial"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data = array(longitud_data, c(2, 3))
colnames(longitud_data) = c("Deficit", "Inicial", "Saturacion")
hojas_data = c()
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Deficit"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Deficit"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Inicial"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Inicial"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data = array(hojas_data, c(2, 3))
colnames(hojas_data) = c("Deficit", "Inicial", "Saturacion")
longitud_data_final = c()
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Deficit"]))
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Inicial"]))
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data_final = array(longitud_data_final, dimnames = list(c("Deficit", "Inicial", "Saturacion")))
hojas_data_final = c()
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"]))
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"]))
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data_final = array(hojas_data_final, dimnames = list(c("Deficit", "Inicial", "Saturacion")))
barplot(longitud_data_final, ylab = "Longitud de la hoja más larga", xlab="Tratamiento")
barplot(hojas_data_final, ylab = "Cantidad de hojas", xlab="Tratamiento")
barplot(longitud_data, beside=TRUE, ylab = "Longitud de la hoja más larga", xlab="Tratamiento", ylim = c(0, 20))
barplot(hojas_data, beside=TRUE, ylab = "Cantidad de hojas", xlab="Tratamiento", ylim = c(0, 7))
boxplot(long_delta~Tratamiento, data=data_nuevo)
boxplot(hojas_delta~Tratamiento, data=data_nuevo)
data = read.csv("E:/Downloads/basededatos.csv", dec = ".", sep = ";", header=TRUE)
data = data[data$Individuo != 2, ]
data_nuevo = data[data$Semana == 1, c("Tratamiento", "Individuo")]
data_nuevo$long_sem_2 = data[data$Semana == 2, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_1 = data[data$Semana == 1, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_3 = data[data$Semana == 3, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_4 = data[data$Semana == 4, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$hojas_sem_1 = data[data$Semana == 1, c("N..de.hojas")]
data_nuevo$hojas_sem_2 = data[data$Semana == 2, c("N..de.hojas")]
data_nuevo$hojas_sem_3 = data[data$Semana == 3, c("N..de.hojas")]
data_nuevo$hojas_sem_4 = data[data$Semana == 4, c("N..de.hojas")]
data_nuevo$long_delta = data_nuevo$long_sem_4 - data_nuevo$long_sem_1
data_nuevo$hojas_delta = data_nuevo$hojas_sem_4 - data_nuevo$hojas_sem_1
data_nuevo$hojas_delta
plot(data_nuevo$hojas_delta)
plot(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"])
data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"]
data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"]
plot(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"])
plot(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"])
hist(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"])
hist(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"])
hist(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"])
density_data = data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"]
plot(density_data)
xfit = seq(min(density_data), max(density_data), length = 40)
yfit = dnorm(xfit,mean=mean(density_data),sd=sd(density_data))
yfit = yfit*diff(h$mids[1:2]) * length(density_data)
hist(density_data)
density_data = data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"]
h = hist(density_data)
xfit = seq(min(density_data), max(density_data), length = 40)
yfit = dnorm(xfit,mean=mean(density_data),sd=sd(density_data))
yfit = yfit*diff(h$mids[1:2]) * length(density_data)
lines(xfit, yfit, col="blue", lwd=2)
density_data = data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"]
h = hist(density_data)
xfit = seq(min(density_data), max(density_data), length = 40)
yfit = dnorm(xfit,mean=mean(density_data),sd=sd(density_data))
yfit = yfit*diff(h$mids[1:2]) * length(density_data)
lines(xfit, yfit, col="blue", lwd=2)
density_data = data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"]
h = hist(density_data)
xfit = seq(min(density_data), max(density_data), length = 40)
yfit = dnorm(xfit,mean=mean(density_data),sd=sd(density_data))
yfit = yfit*diff(h$mids[1:2]) * length(density_data)
lines(xfit, yfit, col="blue", lwd=2)
log
density_data = log(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"])
h = hist(density_data)
xfit = seq(min(density_data), max(density_data), length = 40)
yfit = dnorm(xfit,mean=mean(density_data),sd=sd(density_data))
yfit = yfit*diff(h$mids[1:2]) * length(density_data)
lines(xfit, yfit, col="blue", lwd=2)
inicial_data = log(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"])
h = hist(inicial_data)
xfit = seq(min(inicial_data), max(inicial_data), length = 40)
yfit = dnorm(xfit,mean=mean(inicial_data),sd=sd(inicial_data))
yfit = yfit*diff(h$mids[1:2]) * length(inicial_data)
lines(xfit, yfit, col="blue", lwd=2)
saturacion_data = log(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"])
h = hist(saturacion_data)
xfit = seq(min(saturacion_data), max(saturacion_data), length = 40)
yfit = dnorm(xfit,mean=mean(saturacion_data),sd=sd(saturacion_data))
yfit = yfit*diff(h$mids[1:2]) * length(saturacion_data)
lines(xfit, yfit, col="blue", lwd=2)
signedlog10 = function(x) {
ifelse(abs(x) <= 1, 0, sign(x)*log10(abs(x)))
}
density_data = signedlog10(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"])
h = hist(density_data)
xfit = seq(min(density_data), max(density_data), length = 40)
yfit = dnorm(xfit,mean=mean(density_data),sd=sd(density_data))
yfit = yfit*diff(h$mids[1:2]) * length(density_data)
lines(xfit, yfit, col="blue", lwd=2)
inicial_data = signedlog10(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"])
h = hist(inicial_data)
xfit = seq(min(inicial_data), max(inicial_data), length = 40)
yfit = dnorm(xfit,mean=mean(inicial_data),sd=sd(inicial_data))
yfit = yfit*diff(h$mids[1:2]) * length(inicial_data)
lines(xfit, yfit, col="blue", lwd=2)
saturacion_data = signedlog10(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"])
h = hist(saturacion_data)
xfit = seq(min(saturacion_data), max(saturacion_data), length = 40)
yfit = dnorm(xfit,mean=mean(saturacion_data),sd=sd(saturacion_data))
yfit = yfit*diff(h$mids[1:2]) * length(saturacion_data)
lines(xfit, yfit, col="blue", lwd=2)
deficit_data = signedlog10(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"])
h = hist(density_data)
xfit = seq(min(density_data), max(density_data), length = 40)
yfit = dnorm(xfit,mean=mean(density_data),sd=sd(density_data))
yfit = yfit*diff(h$mids[1:2]) * length(density_data)
lines(xfit, yfit, col="blue", lwd=2)
inicial_data = signedlog10(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"])
h = hist(inicial_data)
xfit = seq(min(inicial_data), max(inicial_data), length = 40)
yfit = dnorm(xfit,mean=mean(inicial_data),sd=sd(inicial_data))
yfit = yfit*diff(h$mids[1:2]) * length(inicial_data)
lines(xfit, yfit, col="blue", lwd=2)
saturacion_data = signedlog10(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"])
h = hist(saturacion_data)
xfit = seq(min(saturacion_data), max(saturacion_data), length = 40)
yfit = dnorm(xfit,mean=mean(saturacion_data),sd=sd(saturacion_data))
yfit = yfit*diff(h$mids[1:2]) * length(saturacion_data)
lines(xfit, yfit, col="blue", lwd=2)
data = read.csv("E:/Downloads/basededatos.csv", dec = ".", sep = ";", header=TRUE)
data = data[data$Individuo != 2, ]
data_nuevo = data[data$Semana == 1, c("Tratamiento", "Individuo")]
data_nuevo$long_sem_1 = data[data$Semana == 1, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_2 = data[data$Semana == 2, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_3 = data[data$Semana == 3, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_4 = data[data$Semana == 4, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$hojas_sem_1 = data[data$Semana == 1, c("N..de.hojas")]
data_nuevo$hojas_sem_2 = data[data$Semana == 2, c("N..de.hojas")]
data_nuevo$hojas_sem_3 = data[data$Semana == 3, c("N..de.hojas")]
data_nuevo$hojas_sem_4 = data[data$Semana == 4, c("N..de.hojas")]
data_nuevo$long_delta = data_nuevo$long_sem_4 - data_nuevo$long_sem_1
data_nuevo$hojas_delta = data_nuevo$hojas_sem_4 - data_nuevo$hojas_sem_1
data_nuevo$hojas_log = signedlog10(data_nuevo$hojas_delta)
signedlog10 = function(x) {
ifelse(abs(x) <= 1, 0, sign(x)*log10(abs(x)))
}
data = read.csv("E:/Downloads/basededatos.csv", dec = ".", sep = ";", header=TRUE)
data = data[data$Individuo != 2, ]
data_nuevo = data[data$Semana == 1, c("Tratamiento", "Individuo")]
data_nuevo$long_sem_1 = data[data$Semana == 1, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_2 = data[data$Semana == 2, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_3 = data[data$Semana == 3, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$long_sem_4 = data[data$Semana == 4, c("Longitud.de.la.hoja.mas.larga")]
data_nuevo$hojas_sem_1 = data[data$Semana == 1, c("N..de.hojas")]
data_nuevo$hojas_sem_2 = data[data$Semana == 2, c("N..de.hojas")]
data_nuevo$hojas_sem_3 = data[data$Semana == 3, c("N..de.hojas")]
data_nuevo$hojas_sem_4 = data[data$Semana == 4, c("N..de.hojas")]
data_nuevo$long_delta = data_nuevo$long_sem_4 - data_nuevo$long_sem_1
data_nuevo$hojas_delta = data_nuevo$hojas_sem_4 - data_nuevo$hojas_sem_1
data_nuevo$hojas_log = signedlog10(data_nuevo$hojas_delta)
anova_longitud = aov(data_nuevo$long_delta~data_nuevo$Tratamiento, data=data_nuevo)
anova_longitud
anova_hojas = aov(data_nuevo$hojas_delta~data_nuevo$Tratamiento, data=data_nuevo)
anova_hojas
summary(anova_longitud)
summary(anova_hojas)
shapiro.test(anova_longitud$residuals)
shapiro.test(anova_hojas$residuals)
longitud_data = c()
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Deficit"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Deficit"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Inicial"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Inicial"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data = c(longitud_data, mean(data_nuevo$long_sem_4[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data = array(longitud_data, c(2, 3))
colnames(longitud_data) = c("Deficit", "Inicial", "Saturacion")
hojas_data = c()
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Deficit"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Deficit"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Inicial"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Inicial"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_1[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data = c(hojas_data, mean(data_nuevo$hojas_sem_4[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data = array(hojas_data, c(2, 3))
colnames(hojas_data) = c("Deficit", "Inicial", "Saturacion")
longitud_data_final = c()
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Deficit"]))
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Inicial"]))
longitud_data_final = c(longitud_data_final, mean(data_nuevo$long_delta[data_nuevo$Tratamiento == "Saturacion"]))
longitud_data_final = array(longitud_data_final, dimnames = list(c("Deficit", "Inicial", "Saturacion")))
hojas_data_final = c()
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Deficit"]))
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Inicial"]))
hojas_data_final = c(hojas_data_final, mean(data_nuevo$hojas_delta[data_nuevo$Tratamiento == "Saturacion"]))
hojas_data_final = array(hojas_data_final, dimnames = list(c("Deficit", "Inicial", "Saturacion")))
barplot(longitud_data_final, ylab = "Longitud de la hoja más larga", xlab="Tratamiento")
barplot(hojas_data_final, ylab = "Cantidad de hojas", xlab="Tratamiento")
longitud_data_final
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 600*600, 2)
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 600*600, 2)
transformations
translations
probability
iterations
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 600*600, 2)
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 600*600, 2)
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 600*600, 2)
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 600*600, 2)
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 600*600, 2)
result = RunIFS2D(transformations, translations, probability, iterations, 600*600, 1)
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 1600*1600, 2)
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 1600*1600, 2)
library(IFSPlot)
transformations = list()
translations    = list()
probability     = c()
n_rules = ceiling(runif(1, 2, 5))
for(i in 1:n_rules) {
transformations[[i]] = matrix(data = c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1)), nrow = 2, ncol = 2)
translations[[i]]    = c(runif(1, -10, 10), runif(1, -1, 1))
if(i < n_rules && sum(probability) < 100)
probability = c(probability, ceiling(runif(1, 1, 100 - sum(probability))))
else
probability = c(probability, 100 - sum(probability))
}
iterations = 10**7
result = RunIFS2D(transformations, translations, probability, iterations, 1600*1600, 2)
transformations
translations
probability
iterations
CMD INSTALL
setwd("e:/Documents/IFSPlot/")
devtools::use_build_ignore(c("Examples.md", "Docs", ".git", ".travis.yml"))
